 - name: Check Kuber installed
   command: kubeadm --version
   ignore_errors: True
   register: kuber_install_status

 - name: Swapoff
   remote_user: root
   command: swapoff -a
   when: kuber_install_status is failed

 - name: Disable swap in fstab
   remote_user: root
   command: sed -i '/swap/d' /etc/fstab
   ignore_errors: True
   when: kuber_install_status is failed

 - name: Remove swap image
   remote_user: root
   command: rm /swap.img
   ignore_errors: True
   when: kuber_install_status is failed

 - name: disbale autorenaming
   remote_user: root
   copy: src=files/etc-hosts dest=/etc/hosts

 - name: Enable Docker
   command: systemctl enable docker
   remote_user: root

 - name: Add the Kubernetes signing key
   remote_user: root
   shell: curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add
   when: kuber_install_status is failed

 - name: Add the Kubernetes Repo
   remote_user: root
   command: apt-add-repository "deb http://apt.kubernetes.io/ kubernetes-xenial main"
   when: kuber_install_status is failed

 - name: Update repos
   remote_user: root
   action: apt update_cache=yes

 - name: Install Kubeadm
   remote_user: root
   apt:
      name: "{{packages}}"
   vars:
      packages:
      - kubeadm


 - name: Init Kubeadm only on Master nodes
   remote_user: root
   shell: kubeadm init --pod-network-cidr\=10.244.0.0/16
   when: '"master" in inventory_hostname'
   register: kubeadm_results

 - name: Parsing kubeadm join parameters
   set_fact:
      kudeadm_socket: "{{ kubeadm_results.stdout | regex_search(regexp_socket,'\\1') }}"
      kudeadm_token: "{{ kubeadm_results.stdout | regex_search(regexp_token,'\\1') }}"
      kudeadm_hash: "{{ kubeadm_results.stdout | regex_search(regexp_hash,'\\1') }}"
   vars:
      regexp_socket: 'kubeadm join\ ([^ ]+)'
      regexp_token: '--token\ ([^ ]+)'
      regexp_hash: ' --discovery-token-ca-cert-hash\ ([^ ]+)'
   when: '"master" in inventory_hostname'

 - name: Post Install Kubeadm Cluster Part 1/3
   shell: mkdir -p /home/volk/.kube
   when: '"master" in inventory_hostname'

 - name: Post Install Kubeadm Cluster Part 2/3
   remote_user: root
   shell: cp -i /etc/kubernetes/admin.conf /home/volk/.kube/config
   when: '"master" in inventory_hostname'

 - name: Post Install Kubeadm Cluster Part 3/3
   remote_user: root
   shell: chown volk:volk /home/volk/.kube/config
   when: '"master" in inventory_hostname'

 - name: Install autocompletion on master Step 1/2
   shell: echo 'source <(kubectl completion bash)' >> ~/.bashrc
   when: '"master" in inventory_hostname'

 - name: Install autocompletion on master Step 2/2
   remote_user: root
   shell: kubectl completion bash > /etc/bash_completion.d/kubectl
   when: '"master" in inventory_hostname'

 - name: give vhosts time to start
   pause: minutes=10

 - name: Kubectl Flannel
   remote_user: volk
   shell: kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml
   when: '"master" in inventory_hostname'

 - name: Debug - get connection strings
   debug:
     msg:
       - "Kubeadm socket: {{kudeadm_socket}} token: {{kudeadm_token}} and token hash: {{kudeadm_hash}}"
   when: '"master" in inventory_hostname'

 - name: give vhosts time to start
   pause: minutes=5

 - name: Join Cluster on worker nodes
   command: kubeadm join {{hostvars['k8s-master']['kudeadm_socket']}} --token {{hostvars['k8s-master']['kudeadm_token']}} --discovery-token-ca-cert-hash {{hostvars['k8s-master']['kudeadm_hash']}}
   when: '"worker" in inventory_hostname'


